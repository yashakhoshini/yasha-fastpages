<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://yashakhoshini.github.io/yasha-fastpages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://yashakhoshini.github.io/yasha-fastpages/" rel="alternate" type="text/html" /><updated>2023-01-16T23:46:08-06:00</updated><id>https://yashakhoshini.github.io/yasha-fastpages/feed.xml</id><title type="html">Yashaâ€™s Pages</title><subtitle>My work for the class APCSP.</subtitle><entry><title type="html">Performace Task 2</title><link href="https://yashakhoshini.github.io/yasha-fastpages/2023/01/16/performace-task-2.html" rel="alternate" type="text/html" title="Performace Task 2" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>https://yashakhoshini.github.io/yasha-fastpages/2023/01/16/performace-task-2</id><author><name></name></author><summary type="html"><![CDATA[toc: true layout: post description: my grades on the 4 example preformance tasks categories: [markdown, java] title: Performance Task Part 2 Reporting Category Student Score College Board Score Comments &lt;/tr&gt; Program Purpose and Function 1 0 The stated goal of the program is to allow users to view animals and recognize them later, it mentions the underlying issue or artistic motivation behind it which was good. However, the description provided does not match the functionality shown in the video and conflates the input and output. Data Abstraction 0 0 Two code snippets are presented, one that demonstrates how data is stored in the list "animalImages", and another that depicts the list "animalList". However, the "animalList" is not used in either of the code snippets. The explanation provided mentions the content of "animalList" but also includes details about the images from "animalImages" which are stated to be in that list. Managing Complexity 1 0 The provided response includes two code segments that demonstrate the efficient storage of data in a list named "animalImages" and "animalList". This effectively utilizes the capability of a list to store multiple variables in a shorter and more organized manner, thus simplifying the overall complexity of the code. Furthermore, the response explains the practical application of using a list to manage complexity and how it streamlines the overall program structure. Procedural Abstraction 0 0 The response features a student-created function named "evaluateGuess" that takes in one input, "guess" and demonstrates its usage in a separate code snippet. The function is described as determining the accuracy of the user's guess. However, it does not elaborate on how this function fits into the larger picture and contributes to the overall functionality of the program. Algorithm Implementation 0 0 The "evaluateGuess" function created by the student, includes elements of sequencing, iteration (using a for loop) and selection (utilizing an if statement) within the algorithm. The explanation provided gives a brief overview of the algorithm, but it lacks sufficient detail to allow someone to replicate it. Overview The projects provided discuss different elements of a program or code, including the storage and management of data in lists, the functionality of student-developed procedures and functions, and the use of specific programming techniques such as iteration and selection. However, some of the projects lack sufficient detail or explanation of the program's overall purpose or the specific ways in which the elements mentioned contribute to the program's functionality. &lt;/tr&gt;]]></summary></entry><entry><title type="html">Reunion Project Roles</title><link href="https://yashakhoshini.github.io/yasha-fastpages/markdown/reunion%20project/2023/01/16/roles-reunion-project.html" rel="alternate" type="text/html" title="Reunion Project Roles" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>https://yashakhoshini.github.io/yasha-fastpages/markdown/reunion%20project/2023/01/16/roles-reunion-project</id><author><name></name></author><category term="markdown" /><category term="reunion project" /><summary type="html"><![CDATA[Roles and objectives for our reunion project]]></summary></entry><entry><title type="html">Live Stock Data</title><link href="https://yashakhoshini.github.io/yasha-fastpages/markdown/2023/01/16/real-time-stock-data.html" rel="alternate" type="text/html" title="Live Stock Data" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>https://yashakhoshini.github.io/yasha-fastpages/markdown/2023/01/16/real-time-stock-data</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[HTML code that I worked on that utilizes third-party API's and formatting to get live stock data.]]></summary></entry><entry><title type="html">Python RapidAPI</title><link href="https://yashakhoshini.github.io/yasha-fastpages/techtalk/rapidapi" rel="alternate" type="text/html" title="Python RapidAPI" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>https://yashakhoshini.github.io/yasha-fastpages/techtalk/rapid-API</id><author><name></name></author><category term="1.A" /><category term="5.B" /><category term="5.D" /><category term="api" /><category term="rapidapi" /><summary type="html"><![CDATA[APIs can be found all over the internet. A great consolidator of many APIs is RapidAPI. In this blog we will use a site to consolidates API stats. Learning a few lines of code and you can start extracting lots of data from the internet via APIs.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://yashakhoshini.github.io/yasha-fastpages/images/rapidapi.png" /><media:content medium="image" url="https://yashakhoshini.github.io/yasha-fastpages/images/rapidapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Unit 3 Sections 14 and 15</title><link href="https://yashakhoshini.github.io/yasha-fastpages/ap%20csp/unit%203/section%2014/section%2015/lesson/2023/01/16/lesson-14-and-15-hacks.html" rel="alternate" type="text/html" title="Unit 3 Sections 14 and 15" /><published>2023-01-16T00:00:00-06:00</published><updated>2023-01-16T00:00:00-06:00</updated><id>https://yashakhoshini.github.io/yasha-fastpages/ap%20csp/unit%203/section%2014/section%2015/lesson/2023/01/16/lesson-14-and-15-hacks</id><author><name></name></author><category term="ap csp" /><category term="unit 3" /><category term="section 14" /><category term="section 15" /><category term="lesson" /><summary type="html"><![CDATA[Hacks on sections 14 and 15]]></summary></entry></feed>